{"ast":null,"code":"var _jsxFileName = \"/workspaces/Pi-SkillSwap/pi-skillswap-frontend/src/components/DisputeManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PiButton, PiInput } from '@pi-community/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisputeManager = () => {\n  _s();\n  const [disputes, setDisputes] = useState([]);\n  const [exchangeId, setExchangeId] = useState(\"\");\n  const [vote, setVote] = useState(false); // false = conferma, true = contesta\n\n  const fetchDisputes = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/exchange/disputes');\n      const data = await res.json();\n      setDisputes(data.disputes);\n    } catch (error) {\n      console.error(\"Errore nel recupero contestazioni:\", error);\n    }\n  };\n  const submitDisputeVote = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/exchange/dispute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          exchangeId,\n          vote,\n          captchaToken: \"valido\"\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        alert(\"Voto registrato correttamente!\");\n        fetchDisputes();\n      } else {\n        alert(\"Errore: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Errore nell'invio del voto di contestazione:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDisputes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dispute-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gestione Contestazioni\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID Scambio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PiInput, {\n        value: exchangeId,\n        onChange: e => setExchangeId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Vota per contestare? (true/false):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PiInput, {\n        type: \"text\",\n        value: vote,\n        onChange: e => setVote(e.target.value === \"true\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PiButton, {\n      onClick: submitDisputeVote,\n      children: \"Invia Voto Contestazione\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Elenco Contestazioni\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: disputes.map((d, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Scambio \", d.exchangeId, \" - Voti: \", JSON.stringify(d.votes)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DisputeManager, \"lHlRpn67jfXBOHbBV2Cz8DwnV2w=\");\n_c = DisputeManager;\nexport default DisputeManager;\nvar _c;\n$RefreshReg$(_c, \"DisputeManager\");","map":{"version":3,"names":["React","useState","useEffect","PiButton","PiInput","jsxDEV","_jsxDEV","DisputeManager","_s","disputes","setDisputes","exchangeId","setExchangeId","vote","setVote","fetchDisputes","res","fetch","data","json","error","console","submitDisputeVote","method","headers","body","JSON","stringify","captchaToken","success","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","map","d","idx","votes","_c","$RefreshReg$"],"sources":["/workspaces/Pi-SkillSwap/pi-skillswap-frontend/src/components/DisputeManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PiButton, PiInput } from '@pi-community/toolkit';\n\nconst DisputeManager = () => {\n  const [disputes, setDisputes] = useState([]);\n  const [exchangeId, setExchangeId] = useState(\"\");\n  const [vote, setVote] = useState(false); // false = conferma, true = contesta\n\n  const fetchDisputes = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/exchange/disputes');\n      const data = await res.json();\n      setDisputes(data.disputes);\n    } catch (error) {\n      console.error(\"Errore nel recupero contestazioni:\", error);\n    }\n  };\n\n  const submitDisputeVote = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/api/exchange/dispute', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ exchangeId, vote, captchaToken: \"valido\" })\n      });\n      const data = await res.json();\n      if (data.success) {\n        alert(\"Voto registrato correttamente!\");\n        fetchDisputes();\n      } else {\n        alert(\"Errore: \" + data.error);\n      }\n    } catch (error) {\n      console.error(\"Errore nell'invio del voto di contestazione:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDisputes();\n  }, []);\n\n  return (\n    <div className=\"dispute-manager\">\n      <h2>Gestione Contestazioni</h2>\n      <div>\n        <label>ID Scambio:</label>\n        <PiInput value={exchangeId} onChange={(e) => setExchangeId(e.target.value)} />\n      </div>\n      <div>\n        <label>Vota per contestare? (true/false):</label>\n        <PiInput \n          type=\"text\" \n          value={vote} \n          onChange={(e) => setVote(e.target.value === \"true\")} \n        />\n      </div>\n      <PiButton onClick={submitDisputeVote}>Invia Voto Contestazione</PiButton>\n      <hr />\n      <h3>Elenco Contestazioni</h3>\n      <ul>\n        {disputes.map((d, idx) => (\n          <li key={idx}>\n            Scambio {d.exchangeId} - Voti: {JSON.stringify(d.votes)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default DisputeManager;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzC,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BT,WAAW,CAACQ,IAAI,CAACT,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACpEM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,UAAU;UAAEE,IAAI;UAAEe,YAAY,EAAE;QAAS,CAAC;MACnE,CAAC,CAAC;MACF,MAAMV,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACW,OAAO,EAAE;QAChBC,KAAK,CAAC,gCAAgC,CAAC;QACvCf,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM;QACLe,KAAK,CAAC,UAAU,GAAGZ,IAAI,CAACE,KAAK,CAAC;MAChC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;IACtE;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B1B,OAAA;MAAA0B,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1B9B,OAAA,CAACF,OAAO;QAACiC,KAAK,EAAE1B,UAAW;QAAC2B,QAAQ,EAAGC,CAAC,IAAK3B,aAAa,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACN9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAO;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjD9B,OAAA,CAACF,OAAO;QACNqC,IAAI,EAAC,MAAM;QACXJ,KAAK,EAAExB,IAAK;QACZyB,QAAQ,EAAGC,CAAC,IAAKzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,KAAK,MAAM;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA,CAACH,QAAQ;MAACuC,OAAO,EAAEpB,iBAAkB;MAAAU,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACzE9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN9B,OAAA;MAAA0B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B9B,OAAA;MAAA0B,QAAA,EACGvB,QAAQ,CAACkC,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBACnBvC,OAAA;QAAA0B,QAAA,GAAc,UACJ,EAACY,CAAC,CAACjC,UAAU,EAAC,WAAS,EAACe,IAAI,CAACC,SAAS,CAACiB,CAAC,CAACE,KAAK,CAAC;MAAA,GADhDD,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAjEID,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AAmEpB,eAAeA,cAAc;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}